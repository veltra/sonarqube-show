version: 2.1

jobs:
  sonarqube:
    circleci_ip_ranges: true
    docker:
      - image: circleci/node:18.19.0
    environment:
      SONAR_HOST_URL: "https://sonar.dev.veltra.com"
    steps:
      - checkout
      - run:
          name: Install SonarQube Scanner
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
            unzip sonar-scanner-cli-5.0.1.3006-linux.zip -d /tmp
            sudo mv /tmp/sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
            echo 'export PATH=$PATH:/opt/sonar-scanner/bin' >> $BASH_ENV
      - run:
          name: Run SonarQube analysis
          command: |
            sonar-scanner -Dsonar.projectSettings=sonar-project.properties
      - run:
          name: Check SonarQube Quality Gate
          command: |
            #!/bin/bash
            set -e

            checkQualityGate() {
              sonar_project_key="show-test"
              sleep 5  # initial sleep time
              for i in {1..30}; do  # polling for a maximum of 30 attempts
                response=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=$sonar_project_key")
                status=$(echo $response | jq -r '.projectStatus.status')

                if [ "$status" != "NONE" ]; then
                  echo "Quality Gate Status: $status"
                  if [ "$status" != "OK" ]; then
                    echo "Quality Gate failed!"
                    exit 1
                  else
                    echo "Quality Gate passed."
                    break
                  fi
                fi
                echo "Waiting for Quality Gate status..."
                sleep 10
              done
            }

            checkQualityGate

workflows:
  version: 2
  Sonarqube-analyze:
    jobs:
      - sonarqube
      